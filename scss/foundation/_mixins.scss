/*===========================================================================*/
/*  mixin  */
/*===========================================================================*/
@use "sass:math";

@mixin sp {
  @media (max-width: 767px) {
    @content;
  }
}

@mixin pc {
  @media (min-width: 768px) {
    @content;
  }
}

// =============================================================================
// CLAMP() 自動算出 MIXIN
// =============================================================================
$root-size: 10px !default;
// remをpxに変換
@function to-px($len) {
  @if math.is-unitless($len) {
    @return $len * 1px;
  }
  @if math.unit($len) == "px" {
    @return $len;
  }
  @if math.unit($len) == "rem" {
    @return math.div($len, 1rem) * $root-size;
  }
  @error "Unsupported unit `#{math.unit($len)}`. Use px or rem.";
}

// 基本的なclamp()算出mixin
@mixin clamp($prop, $min, $max, $min-w: 375px, $max-w: 1200px) {
  $min-px: to-px($min);
  $max-px: to-px($max);
  $minw-px: to-px($min-w);
  $maxw-px: to-px($max-w);

  $min-num: math.div($min-px, 1px);
  $max-num: math.div($max-px, 1px);
  $minw-num: math.div($minw-px, 1px);
  $maxw-num: math.div($maxw-px, 1px);

  @if $maxw-num == $minw-num {
    @error "$min-w and $max-w must differ.";
  }

  $slope: math.div(($max-num - $min-num), ($maxw-num - $minw-num));
  $intercept: $min-num - $slope * $minw-num;

  #{$prop}: clamp(#{$min}, calc(#{$intercept}px + #{$slope * 100}vw), #{$max});
}

// =============================================================================
// 各プロパティのclampを算出
// =============================================================================
$breakpoint-sp-min: 375px;
$breakpoint-sp-max: 767px;
$breakpoint-pc-min: 768px;
$breakpoint-pc-max: 1440px;
// PC用
@mixin clamp-pc($property, $min, $max) {
  @include clamp($property, $min, $max, $breakpoint-pc-min, $breakpoint-pc-max);
}
// SP用
@mixin clamp-sp($property, $min, $max) {
  @include clamp($property, $min, $max, $breakpoint-sp-min, $breakpoint-sp-max);
}

// PC用：最大値のみ入力 → 最小値は自動で0.7倍
@mixin clamp-pc-auto($property, $max) {
  $min: if(math.unit($max) == "rem", $max * 0.7, math.div($max * 7, 10)); // 単位維持
  @include clamp($property, $min, $max, $breakpoint-pc-min, $breakpoint-pc-max);
}
// SP用：最大値のみ入力 → 最小値は自動で0.7倍
// @mixin clamp-sp-auto($property, $max) {
//   $min: if(math.unit($max) == "rem", $max * 0.7, math.div($max * 7, 10)); // 単位維持
//   @include clamp($property, $min, $max, $breakpoint-sp-min, $breakpoint-sp-max);
// }

// SP用：最小値のみ入力 → 最大値は自動で1.428倍（10px: x = 0.7: 1）
@mixin clamp-sp-auto($property, $min-value) {
  $min: $min-value;
  $max: math.div($min-value, 0.7);
  @include clamp($property, $min, $max, $breakpoint-sp-min, $breakpoint-sp-max);
}
